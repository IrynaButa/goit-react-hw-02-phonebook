{"version":3,"sources":["Components/Phonebook.module.css","Components/Contacts.js","Components/Filter.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Contacts","contacts","onDeleteContact","className","styles","form","map","contact","name","number","type","onClick","id","Filter","value","onChangeFilter","onChange","Form","state","nameInputId","shortid","generate","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","console","log","props","onAddContact","reset","onSubmit","this","htmlFor","pattern","title","required","Component","App","filter","addContact","find","alert","deleteContact","contactId","prevState","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31f4b82d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__3DrU0\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Phonebook.module.css\";\n\nconst Contacts = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.form}>\n    {contacts.map((contact) => (\n      <li key={contact.id}>\n        {contact.name}\n        {\" : \"}\n        {contact.number}\n        <button\n          type=\"button\"\n          name=\"delete\"\n          onClick={() => onDeleteContact(contact.id)}\n        >\n          delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Phonebook.module.css\";\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <div className={styles.form}>\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChangeFilter} />\n    </label>\n  </div>\n);\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport styles from \"./Phonebook.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.onAddContact(this.state);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Phone number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\n// import Container from './components/Container';\n// import TodoList from './components/TodoList';\nimport Contacts from \"./Components/Contacts\";\nimport Filter from \"./Components/Filter\";\nimport Form from \"./Components/Form\";\n// import initialTodos from './todos.json';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} already exist`);\n      return;\n    }\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState((state) => ({\n      contacts: [contact, ...state.contacts],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  onChangeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.onChangeFilter} />\n        <Contacts\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}